TITLE "Contador de 6 bits";

FUNCTION rising_edge (clock, signal)
	RETURNS (upsignal);
	

SUBDESIGN counter
(
  clock, system_clock, updown, max[5..0] : INPUT;  %clock de entrada em segundos, pino de subida ou descida, modulo da contagem%
  EOC, counter[5..0]: OUTPUT;   %indica o fim da contagem, numero da contagem%
  
)


	
VARIABLE

registers[5..0]: DFF;
maxvalue: DFF;
minvalue: DFF;




BEGIN

	registers[].clk = clock;
	maxvalue.clk = clock;
	minvalue.clk = clock;
	
	counter[] = registers[].q;
	EOC = rising_edge(system_clock, maxvalue.q) # rising_edge(system_clock, minvalue.q);				%indicador de fim de contagem %
	
	IF updown == VCC THEN 							%logica de contagem crescente%
		
		minvalue.d = GND;
		
		IF registers[].q < max[] THEN
		
			registers[].d = registers[].q + 1;
			
			maxvalue.d = GND;
			
		ELSIF registers[].q == max[] THEN
			
			registers[].d = 0;
			
			maxvalue.d = VCC;							%envia pra o indicador de valor maximo para atuar no proximo clock%
		
	
		END IF;
	ELSE 													%logica de contagem decrescente%
		maxvalue.d = GND;
		
		IF registers[].q > 0 THEN
			
			registers[].d = registers[].q - 1;
			
			minvalue.d = GND;
		
		ELSIF registers[].q == 0 THEN
			
			registers[].d = max[];
			
			minvalue.d = VCC;
		
		END IF;
		
	END IF;
END;